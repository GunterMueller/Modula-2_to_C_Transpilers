.TH m2c 1 "14 December 1991"
.SH NAME
m2c \- Modula-2 translator
.SH SYNOPSIS
.B m2c
[ options ] file ...
.SH DESCRIPTION
The
.I m2c
command accepts options and file names as operands.
Multiple single-letter options may
.I not
be grouped after delimiter `-'. The command m2c uses C compiler for processing
some files. The C compiler is specified for installation time (for example 
it may be
.IR gcc  (1),
.IR cc  (1)
or
.IR pcc  (1)).  
.PP
In general case, m2c command does compilation,
assembly and linking.
Files with names ending in
.I .def
are only tested on syntax and semantics;
files with names ending in
.I .mod
are taken as Modula-2 source to be compiled into C files;
C files generated by the Modula-2 translator and files with name ending in
.I .c
are taken as C source to be preprocessed and compiled;
file names ending in
.I .i
are taken as preprocessor output to be compiled if the used C compiler
does it;
C compiler output files plus any input files with names ending in
.I .s
are assembled;
then the resulting object files, plus any other input files,
are linked together to produce an executable.
.PP
Command options allow you to stop this process at an intermediate stage.
For example, the 
.B \-c
option says not to run the linker.
Then the output consists of object files output by the assembler.
.PP
Each definition, implementation or main module must be in a separate
file with a name relatively ending with
.I .def
,
.I .mod
where name is the module name. For compilation time of Modula-2 module also
all explicitly and implicitly imported definition modules are compiled.
After module compilation into C file number of lines of all these modules and
size of intermediate code is output onto standard error output.
.PP
If any error which does not allow object file generation is fixed 
for compilation time of a file, m2c continues processing other files
but does not execute linking.

.SH OPTIONS
The options which are known for the Modula-2 translator are:
.TP
.B \-3
The translator implements language Modula-2 described in 3rd edition of Wirth's
book.  Implicitly the translator implements the language described in the
4th edition.
.TP
.B \-strict
Prohibit language extensions.
.TP
.B \-C
Stop after compilation of Modula-2 modules to C code. The name of generated
file is module name with suffix .c . If the C compiler recognizes option `-o file' when option `-c' is specified, the name of output C file may be given in option `-o file'.
.TP
.B \-Pdir
Search of imported definition modules in this directory. 
List of searched directories separated by semicolons is
also taken from shell variable
.I `m2paths' .
Order of searching the directories is:
.sp
	current directory
.br
	standard library directory
.br
	directories given in options `-P' 
.br
	directories given in shell variables `m2paths'.
.TP
.B \-test
Generation of code for dynamic tests of ranges and pointers.
.TP
.B \-upper-case 
Allow only upper case keywords and standard identifiers (`-strict' means `-upper-case').
.TP
.B \-v 
Output of command lines of processes loaded by m2c.
If the C compiler recognizes this option the one is 
also passed to the C compiler.
.TP
.B \-update 
Updating instead of creating any Modula-2 module output.
It may be output C (if `-C' option is specified), 
assembler (if `-S' option is specified) or object file (in other cases).
.TP
.B \-CM 
Output of
.IR make  (1)
dependence line for output of each Modula-2 module 
to standard output. None files are generated.
.TP
.B \-all
Only one Modula-2 module must be in command line.
In addition to this requirement the module must be main module.
All program modules are processed with removing procedures unused in program.
Modula-2 translator assumes that implementation module
is placed in the relative definition module directory.
.TP
.B \-make
Only one Modula-2 module must be in command line.
In addition to this requirement the module must be main module.
All program modules in the current directory are processed 
as in update option case. 
Object files of the program which is placed in other directories are used
for loader execution time (if linkage is specified). 
Modula-2 translator assumes that implementation module and its object files
is placed in the relative definition module directory.
.TP
.B \-MAKE
Output of make dependence lines that describes 
processing modules as in `-make'
option specification case. None files are generated.
.PP
The m2c command are also recognized other options which are passed 
to the used C compiler.
To output the list of such options specify 
command m2c without options and files.
.SH LANGUAGE EXTENSIONS
New primitive types
.I SHORTINT,
.I SHORTCARD,
.I SHORTREAL,
.I LONGINT,
.I LONGCARD,
.I LONGREAL,
.I BYTE
are  included  in  the
language.
.PP
Type of function result may be structural.
.PP
Opaque export is restricted only to type the size and the alignment of which
are the same as for type
.I WORD .
.PP
Interface with C functions are included in the language. All
integer C functions are assumed to be placed in the pseudo-module
.I CPROC .
.PP
Control character sequence as in
C language may be used. Such string constant starts with
``' 
and finishes by
`'' . 
.PP
C code fragments may be inserted in declaration or
statement sections of Modula-2 program. The fragments are
placed between brackets 
`%{'
and
`%}' .
.PP
As a consequence of multipass implementation an
identifier may be used before its definition, for example
.sp
         VAR v : t ;
.br
         TYPE t = CARDINAL ;
.SH STANDARD MODULES
The following modules are provided by this implementation of Modula-2.
.br
         ASCII
.br
         Files
.br
         InOut
.br
         MathLib0
.br
         NumConv
.br
         RealConv
.br
         RealInOut
.br
         ShellVars
.br
         Storage
.br
         String
.br
         Terminal
.br
For more details about its see relative definition modules.
.SH DEBUGGING
Debuggers
.I dbx (1)
or
.I gdb (1).
can be used for debugging Modula-2 program
by virtue of accurate implementation of `#line' construction in most C
compiler
and clear correspondence between object names in Modula-2 and C.
For example for output values of current procedure variables can be used
debugger command
.br
          print var
.br
for output variables values of module `sieve' can be used command
.br
          print var_sieve
.SH EXAMPLES
Command
.br
         m2c -make -g -o XREF XREF.mod math.o -lm
.br
creates object files XREF.o and Table.o (if its are obsolete)
and executable file XREF containing also code of object file math.o 
XREF contains additional symbol table for the debugger
.I dbx (1)
or
.I gdb (1).
.PP
Command
.br
         m2c -update -c -O Table.mod
.br
creates optimized object file Table.o (if it is obsolete).
.PP
Command
.br
         m2c -C -all sieve.mod
.br
creates C files of all program sieve modules. Code for procedures unused
in the program are absent in the C files.
.SH FILES
.ta \w'/tmp/m2cNNNNN.c 'u
file.def	Modula-2 definition module
.br
file.mod	Modula-2 main or implementation module
.br
file.c	C source file
.br
file.i	C source file
.br
file.s	assembly language file
.br
file.o	object file
.br
a.out	link edited output
.br
/tmp/m2cNNNNN.c	temporary files
.br
\fIBINDIR\fR/m2c	translator
.br
\fILIBDIR\fR/m2lib.a	run-time library
.br
\fILIBDIR\fR/*.def	standard definition modules
.br
\fILIBDIR\fR/*.mod	standard implementation modules
.br
\fILIBDIR\fR/*.o	object files of standard modules
.sp
.I BINDIR
is usually
.BR /usr/local/bin .
.I LIBDIR
is usually
.BR /usr/local/lib/m2lib .
.SH "SEE ALSO"
cc(1), gcc(1), pcc(1), make(1), dbx(1), gdb(1).
.SH BUGS
Bugs should be reported to
.BR vmakarov@usa.net .
.SH COPYING
Copyright (c) 1993-1997.  The translator is distributed under
GNU Public License.
.P
Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.
.P
Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the
entire resulting derived work is distributed under the terms of a
permission notice identical to this one.
.P
Permission is granted to copy and distribute translations of this
manual into another language, under the above conditions for modified
versions, except that this permission notice may be included in
translations approved by the Free Software Foundation instead of in
the original English.
.SH AUTHOR
Vladimir Makarov (The Institute for Problems of Cybernetics of the USSR Academy of Sciences).
